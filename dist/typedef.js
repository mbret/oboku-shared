"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
exports.typeDefs = void 0;
var graphql_tag_1 = require("graphql-tag");
var mutationTypeDefs = "\n  type MutationResponse {\n    id: ID!\n  }\n\n  type AuthenticationResponse {\n    token: String!\n    user: User!\n  }\n\n  type Mutation {\n    signup(email: String!, password: String!): AuthenticationResponse\n    signin(email: String!, password: String!): AuthenticationResponse\n    editUser(id: ID!, contentPassword: String): User\n\n    addBook(id: ID!, location: String!): MutationResponse\n    removeBook(id: ID!): Book\n    editBook(\n      id: ID!, \n      lastMetadataUpdatedAt: Float, \n      title: String, \n      readingStateCurrentBookmarkLocation: String,\n      readingStateCurrentBookmarkProgressPercent: Float\n    ): Book\n    addTagsToBook(id: ID!, tags: [ID]): MutationResponse\n    removeTagsToBook(id: ID!, tags: [ID]): MutationResponse\n    addCollectionsToBook(id: ID!, collections: [ID]): MutationResponse\n    removeCollectionsToBook(id: ID!, collections: [ID]): MutationResponse\n\n    addTag(id: ID!, name: String): Tag\n    removeTag(id: ID!): MutationResponse\n    editTag(id: ID!, name: String, isProtected: Boolean): Tag\n    \n    addCollections(id: ID!, name: String): Collections\n    removeCollections(id: ID!): Collections\n    editCollections(id: ID!, name: String): Collections\n    \n    addLink(id: ID!, bookId: ID!, location: String!): MutationResponse\n    editLink(id: ID!, location: String!): MutationResponse\n  }  \n";
exports.typeDefs = graphql_tag_1["default"](templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type User {\n    id: ID!\n    email: String\n    contentPassword: String\n  }\n\n  type Book {\n    id: ID!\n    localId: String!\n    title: String\n    creator: String\n    lastMetadataUpdatedAt: Float\n    readingStateCurrentBookmarkProgressUpdatedAt: Float\n    readingStateCurrentBookmarkLocation: String\n    readingStateCurrentBookmarkProgressPercent: Float\n    links: [Link]\n    tags: [Tag]\n    collections: [Collections]\n    createdAt: Float\n  }\n\n  type Books {\n    id: ID!\n    timestamp: Float\n    books: [Book]\n  }\n\n  type Link {\n    id: ID!\n    location: String\n  }\n\n  type Tag {\n    id: ID!\n    localId: ID!\n    name: String\n    books: [Book]\n    isProtected: Boolean\n  }\n\n  type Collections {\n    id: ID!\n    name: String\n    books: [Book]\n  }\n\n  type Query {\n    tags: [Tag]\n    tag(id: ID!): Tag\n    collections: [Collections]\n    collection(id: ID!): Collections\n    books: Books\n    book(id: ID!): Book\n    links: [Link]\n    booksMetadata: [Book]\n  }\n\n  ", "\n"], ["\n  type User {\n    id: ID!\n    email: String\n    contentPassword: String\n  }\n\n  type Book {\n    id: ID!\n    localId: String!\n    title: String\n    creator: String\n    lastMetadataUpdatedAt: Float\n    readingStateCurrentBookmarkProgressUpdatedAt: Float\n    readingStateCurrentBookmarkLocation: String\n    readingStateCurrentBookmarkProgressPercent: Float\n    links: [Link]\n    tags: [Tag]\n    collections: [Collections]\n    createdAt: Float\n  }\n\n  type Books {\n    id: ID!\n    timestamp: Float\n    books: [Book]\n  }\n\n  type Link {\n    id: ID!\n    location: String\n  }\n\n  type Tag {\n    id: ID!\n    localId: ID!\n    name: String\n    books: [Book]\n    isProtected: Boolean\n  }\n\n  type Collections {\n    id: ID!\n    name: String\n    books: [Book]\n  }\n\n  type Query {\n    tags: [Tag]\n    tag(id: ID!): Tag\n    collections: [Collections]\n    collection(id: ID!): Collections\n    books: Books\n    book(id: ID!): Book\n    links: [Link]\n    booksMetadata: [Book]\n  }\n\n  ", "\n"])), mutationTypeDefs);
var templateObject_1;
